
package bloconotasswing;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author thoma
 */
public class blocodenotas extends javax.swing.JFrame {

    /**
     * Creates new form blocodenotas
     */
    public blocodenotas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seletor = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnArquivo = new javax.swing.JMenu();
        btnNovo = new javax.swing.JCheckBoxMenuItem();
        btnAbrir = new javax.swing.JCheckBoxMenuItem();
        btnSalvar = new javax.swing.JCheckBoxMenuItem();
        mnEditar = new javax.swing.JMenu();
        btnColar = new javax.swing.JCheckBoxMenuItem();
        btnRecortar = new javax.swing.JCheckBoxMenuItem();
        btnCopiar = new javax.swing.JCheckBoxMenuItem();
        mnAjuda = new javax.swing.JMenu();
        btnSobre = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(txtResultado);

        mnArquivo.setText("Arquivo");

        btnNovo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnNovo.setSelected(true);
        btnNovo.setText("Novo");
        btnNovo.setIcon(new javax.swing.ImageIcon("C:\\Users\\thoma\\OneDrive\\Área de Trabalho\\blocoimg\\novo.png")); // NOI18N
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        mnArquivo.add(btnNovo);

        btnAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnAbrir.setSelected(true);
        btnAbrir.setText("Abrir");
        btnAbrir.setIcon(new javax.swing.ImageIcon("C:\\Users\\thoma\\OneDrive\\Área de Trabalho\\blocoimg\\abrir.png")); // NOI18N
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        mnArquivo.add(btnAbrir);

        btnSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnSalvar.setSelected(true);
        btnSalvar.setText("Salvar");
        btnSalvar.setIcon(new javax.swing.ImageIcon("C:\\Users\\thoma\\OneDrive\\Área de Trabalho\\blocoimg\\salvar.png")); // NOI18N
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        mnArquivo.add(btnSalvar);

        jMenuBar1.add(mnArquivo);

        mnEditar.setText("Editar");

        btnColar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnColar.setSelected(true);
        btnColar.setText("Colar");
        btnColar.setIcon(new javax.swing.ImageIcon("C:\\Users\\thoma\\OneDrive\\Área de Trabalho\\blocoimg\\copiar.png")); // NOI18N
        btnColar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbtnColarActionPerformed(evt);
            }
        });
        mnEditar.add(btnColar);

        btnRecortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnRecortar.setSelected(true);
        btnRecortar.setText("Recortar");
        btnRecortar.setIcon(new javax.swing.ImageIcon("C:\\Users\\thoma\\OneDrive\\Área de Trabalho\\blocoimg\\recortar.png")); // NOI18N
        btnRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecortarActionPerformed(evt);
            }
        });
        mnEditar.add(btnRecortar);

        btnCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnCopiar.setSelected(true);
        btnCopiar.setText("Copiar");
        btnCopiar.setIcon(new javax.swing.ImageIcon("C:\\Users\\thoma\\OneDrive\\Área de Trabalho\\blocoimg\\copiar.png")); // NOI18N
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });
        mnEditar.add(btnCopiar);

        jMenuBar1.add(mnEditar);

        mnAjuda.setText("Ajuda");
        mnAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAjudaActionPerformed(evt);
            }
        });

        btnSobre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        btnSobre.setSelected(true);
        btnSobre.setText("Sobre");
        btnSobre.setIcon(new javax.swing.ImageIcon("C:\\Users\\thoma\\OneDrive\\Área de Trabalho\\blocoimg\\sobre.png")); // NOI18N
        btnSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSobreActionPerformed(evt);
            }
        });
        mnAjuda.add(btnSobre);

        jMenuBar1.add(mnAjuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnbtnColarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbtnColarActionPerformed
        txtResultado.paste();
    }//GEN-LAST:event_btnbtnColarActionPerformed

    private void btnRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecortarActionPerformed
        txtResultado.cut();
    }//GEN-LAST:event_btnRecortarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        txtResultado.setText("");
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
        txtResultado.copy();
    }//GEN-LAST:event_btnCopiarActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        int abrir = seletor.showOpenDialog(this);
        if(abrir == JFileChooser.APPROVE_OPTION){
           File arquivo = seletor.getSelectedFile();
           try{
            BufferedReader ler = new BufferedReader(new FileReader(arquivo));
            String conteudo = "";
            String linha = "";
            while(linha!= null){
                linha = ler.readLine();
                if(linha!= null){
                    conteudo += linha +"\n";
                }
            }
            txtResultado.setText(conteudo);
           }
           catch(Exception erro){
               JOptionPane.showMessageDialog(this,"O arquivo não pode ser carregado","",JOptionPane.ERROR_MESSAGE);
           }
        }
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int salvar = seletor.showSaveDialog(this);
            if(salvar == JFileChooser.APPROVE_OPTION){
            File arquivo = seletor.getSelectedFile();
            String conteudo = txtResultado.getText();
            try{
                FileWriter writer = new FileWriter(arquivo);
                BufferedWriter buffer = new BufferedWriter(writer);
                buffer.write(conteudo);  
                buffer.close();
               
            }
            catch(Exception erro){
                JOptionPane.showMessageDialog(this,"O arquivo já existe","Erro!",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void mnAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAjudaActionPerformed
        
    }//GEN-LAST:event_mnAjudaActionPerformed

    private void btnSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSobreActionPerformed
        txtResultado.setText("Windows Notepad is a simple text editor for Windows; it creates and edits plain text documents. First released in 1983 to commercialize the computer mouse in MS-DOS, Notepad has been part of every version of Windows ever since. Notepad is a text editor, i.e., an app specialized in editing plain text. It can edit text files (bearing the \".txt\" filename extension) and compatible formats, such as batch files, INI files, and log files. Notepad can read and write plain texts encoded in ASCII, UTF-8, and UTF-16. It supports both left-to-right and right-to-left based languages.\n" +
"\n" +
"Notepad offers only the most basic text manipulation functions, such as finding and replacing text. Until Windows ME, there were almost no keyboard shortcuts and no line-counting feature. Starting with Windows 2000, shortcuts for common commands like \"New\", \"Open\", and \"Save\" were added, as well as a status bar with a line counter (available only when word-wrap is disabled). Before Windows 10 version 1809, Notepad could not properly interpret Unix-style or Mac-style newline characters.[13] Windows 10 version 1809 also introduced the Ctrl+← Backspace keyboard shortcut (deletes the previous word), zoom functionality, the ability to zoom in and out, and the \"Search with Bing\" function.\n" +
"\n" +
"Improving performance has been the main focus of Notepad's development. As part of this effort, Notepad is capable of reading text files even when other apps have acquired a range-based lock on the file.\n" +
"\n" +
"On Windows 95 and earlier, Notepad renders text files in the Fixedsys font. Starting with Windows NT 4.0 and Windows 98, it allows users to choose their own font to display the text. They cannot, however, select individual parts of the text and change their fonts.[17][18] Its default font changed to Lucida Console on Windows 2000, and Consolas on Windows 8.\n" +
"\n" +
"Notepad can print files. It allows customizing headers, footers, and margins before printing. The date, file name, and other information can be placed in the headers and footers with various codes consisting of an ampersand ('&') followed by a letter.\n" +
"\n" +
"Notepad accepts text from the Windows clipboard, but only in the CF_TEXT format. It strips the pasted text of any embedded font and style information. One could temporarily paste formatted text into Notepad, then immediately copy it again to obtain the raw text. The app also has a simple logging function. Each time it opens a file with \".LOG\" on its first line, the app inserts a timestamp on the file's last line.");
    }//GEN-LAST:event_btnSobreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(blocodenotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(blocodenotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(blocodenotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(blocodenotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new blocodenotas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem btnAbrir;
    private javax.swing.JCheckBoxMenuItem btnColar;
    private javax.swing.JCheckBoxMenuItem btnCopiar;
    private javax.swing.JCheckBoxMenuItem btnNovo;
    private javax.swing.JCheckBoxMenuItem btnRecortar;
    private javax.swing.JCheckBoxMenuItem btnSalvar;
    private javax.swing.JCheckBoxMenuItem btnSobre;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu mnAjuda;
    private javax.swing.JMenu mnArquivo;
    private javax.swing.JMenu mnEditar;
    private javax.swing.JFileChooser seletor;
    private javax.swing.JTextPane txtResultado;
    // End of variables declaration//GEN-END:variables
}
